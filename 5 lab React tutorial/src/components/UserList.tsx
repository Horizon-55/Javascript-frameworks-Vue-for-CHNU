import { useMemo } from 'react';
import type { User, GenderFilter } from '../types/User';
import { UserCard } from './UserCard';
import './UserList.css';

interface UserListProps {
  users: User[];
  filter: GenderFilter;
}

export function UserList({ users, filter }: UserListProps) {
  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ useMemo –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó - —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –ø—Ä–∏ –∑–º—ñ–Ω—ñ users –∞–±–æ filter
  const filteredUsers = useMemo(() => {
    if (filter === 'all') {
      return users;
    }
    return users.filter(user => user.gender === filter);
  }, [users, filter]);

  return (
    <div className="user-list-container">
      <div className="user-count">
        –ó–Ω–∞–π–¥–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: <strong>{filteredUsers.length}</strong>
      </div>
      
      <div className="user-list">
        {/* –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ map() –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É –∫–∞—Ä—Ç–æ–∫ - –∞–Ω–∞–ª–æ–≥ v-for */}
        {filteredUsers.map(user => (
          <UserCard key={user.id} user={user} />
        ))}
      </div>

      {/* –£–º–æ–≤–Ω–∏–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥: —è–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ */}
      {filteredUsers.length === 0 && (
        <div className="empty-state">
          <p>üòî –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</p>
        </div>
      )}
    </div>
  );
}

